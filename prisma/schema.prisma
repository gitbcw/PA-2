generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  email        String        @unique
  name         String?
  password     String
  createdAt    DateTime      @default(now()) @map("created_at")
  updatedAt    DateTime      @updatedAt @map("updated_at")
  messages     Message[]
  timeRecords  TimeRecord[]
  progressLogs ProgressLog[]
  importedFiles ImportedFile[]
  objectives   Objective[]   @relation("UserObjectives")

  @@map("users")
}

model Objective {
  id           String           @id @default(uuid())
  title        String
  description  String?
  type         ObjectiveType    @default(TASK) // GOAL, TASK, SUBGOAL, SUBTASK
  status       ObjectiveStatus  @default(ACTIVE)
  priority     Int              @default(1)
  startDate    DateTime?        @map("start_date")
  endDate      DateTime?        @map("end_date")
  progress     Float            @default(0)
  parentId     String?          @map("parent_objective_id")
  userId       String           @map("user_id")
  metadata     Json?            @default("{}")
  weight       Float            @default(1.0)
  totalTime    Int              @default(0) @map("total_time")
  parent       Objective?       @relation("SubObjectives", fields: [parentId], references: [id])
  subObjectives Objective[]     @relation("SubObjectives")
  user         User             @relation("UserObjectives", fields: [userId], references: [id])
  tags         Tag[]            @relation("ObjectiveTags")
  progressLogs ProgressLog[]
  timeRecords  TimeRecord[]
  createdAt    DateTime         @default(now()) @map("created_at")
  updatedAt    DateTime         @updatedAt @map("updated_at")

  @@map("objectives")
}

enum ObjectiveType {
  GOAL
  TASK
  SUBGOAL
  SUBTASK
}

enum ObjectiveStatus {
  ACTIVE
  COMPLETED
  ARCHIVED
  TODO
  IN_PROGRESS
  DONE
}




model Message {
  id         String    @id @default(uuid())
  content    String
  sourceType String    @map("source_type")
  sourceId   String?   @map("source_id")
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")
  userId     String    @map("user_id")
  categoryId String?   @map("category_id")
  metadata   Json?     @default("{}")
  category   Category? @relation(fields: [categoryId], references: [id])
  user       User      @relation(fields: [userId], references: [id])
  tags       Tag[]     @relation("MessageTags")

  @@map("messages")
}

model Category {
  id            String     @id @default(uuid())
  name          String
  description   String?
  parentId      String?    @map("parent_id")
  sourceType    String?    @map("source_type")
  createdAt     DateTime   @default(now()) @map("created_at")
  updatedAt     DateTime   @updatedAt @map("updated_at")
  parent        Category?  @relation("SubCategories", fields: [parentId], references: [id])
  subCategories Category[] @relation("SubCategories")
  messages      Message[]

  @@map("categories")
}

model Tag {
  id        String    @id @default(uuid())
  name      String
  color     String?   @default("#888888")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  objectives Objective[] @relation("ObjectiveTags")
  messages  Message[] @relation("MessageTags")

  @@map("tags")
}


model TimeRecord {
  id        String   @id @default(uuid())
  startTime DateTime @map("start_time")
  endTime   DateTime? @map("end_time")
  duration  Int?     // 持续时间（秒）
  note      String?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  userId    String   @map("user_id")
  taskId    String   @map("task_id")
  user      User     @relation(fields: [userId], references: [id])
  objective Objective @relation(fields: [taskId], references: [id])

  @@map("time_records")
}

model ProgressLog {
  id          String   @id @default(uuid())
  progress    Float    // 进度值 (0-100)
  note        String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  userId      String   @map("user_id")
  taskId      String?  @map("task_id")
  goalId      String?  @map("goal_id")
  user        User     @relation(fields: [userId], references: [id])
  objective    Objective? @relation(fields: [taskId], references: [id])

  @@map("progress_logs")
}

model ImportedFile {
  id          String   @id @default(uuid())
  fileName    String
  fileType    String
  fileSize    Int
  ossPath     String
  description String?
  tags        String[]
  uploadedAt  DateTime @default(now()) @map("uploaded_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  userId      String   @map("user_id")
  user        User     @relation(fields: [userId], references: [id])

  @@map("imported_files")
}

model LogArchive {
  id          String   @id @default(uuid())
  content     String   @db.Text
  logDate     DateTime
  archiveDate DateTime @default(now())
  year        Int
  month       Int
  day         Int
  tags        String[]

  @@index([year, month, day])
  @@map("log_archives")
}
